{"version":3,"sources":["Header/Header.jsx","api/api-request.js","QuickInfo/QuickInfo.jsx","QuickInfo/local-ip.js","routes/ServiceBlock.jsx","routes/Check/Check.jsx","routes/Check/desc-ru.jsx","routes/Check/desc-en.jsx","routes/Scanner/Scanner.jsx","routes/Scanner/desc-ru.jsx","routes/Scanner/desc-en.jsx","routes/Protocols/Protocols.jsx","routes/Protocols/desc-ru.jsx","routes/Protocols/desc-en.jsx","routes/Response/Response.jsx","routes/Response/desc-ru.jsx","routes/Response/desc-en.jsx","routes/Whois/Whois.jsx","routes/Whois/desc-ru.jsx","routes/Whois/desc-en.jsx","routes/Page404/Page404.jsx","App.jsx","i18n.js","translations/en.js","translations/ru.js","index.jsx","Header/myopenports.svg","QuickInfo/icon-copy.svg","routes/Page404/404.png"],"names":["withTranslation","_ref","i18n","react_default","a","createElement","className","role","aria-label","href","src","logo","alt","title","onClick","changeLanguage","index_es","code","svg","api_request","method","payload","arguments","length","undefined","Promise","reject","requestKey","getUuid","query","Object","keys","map","k","encodeURIComponent","join","window","fetch","concat","headers","Content-Type","X-Request-Key","then","res","json","status","resolve","QuickInfo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","uaInfo","uaParser","navigator","userAgent","ip","city","country","region","localIp","ipCopied","_isMounted","requestInformation","_this2","apiRequest","setState","catch","e","console","error","noop","RTCPeerConnectionConstructor","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","pc","iceServers","createDataChannel","createOffer","setLocalDescription","bind","onicecandidate","ice","candidate","localIpMatch","exec","getLocalIp","err","_this$state","_this$state$city","str","t","toLowerCase","_this3","copy","setTimeout","_this4","browserStr","browser","name","version","osStr","os","ua","data-tooltip","classnames","is-copied","handleCopyClick","iconCopy","copied","printLocalIp","getLocationInfo","Component","ServiceBlock","Helmet_default","pageTitle","is-hidden","errMsg","children","id","style","minHeight","w","d","document","n","push","Ya","Context","AdvManager","render","blockId","renderTo","async","getElementsByTagName","s","type","parentNode","insertBefore","Check","checking","port","lastResult","lastProtocol","isValidPort","resultShown","isNaN","portNumber","parseInt","processResult","lastPort","isOpened","port_status","protocol","portInput","focus","key","runCheck","val","target","value","src_routes_ServiceBlock","is-danger","ref","input","placeholder","onKeyPress","handleKeyPress","onChange","handleChange","maxLength","min","disabled","is-loading","is-open-color","is-closed-color","closeResultHandler","language","includes","Scanner","scan_results","jsonRes","_jsonRes$port","parseResults","Protocols","info","result","description","printResults","Whois","uri","lastUri","lastResultCode","lastResultCodeMsg","lastResultRedirects","isValidUri","isIp","isIpCheck","startsWith","parsedUri","Url","parse","hostname","isWebUri","processError","response","code_msg","redirects","uriInput","code_name","lastResults","header","trim","redir","redirectUri","statusCode","domain","isValidDomain","cleanDomain","replace","checkValidDomain","whois_response","domainInput","Page404","useTranslation","notFoundImg","history","createBrowserHistory","ReactGA","initialize","listen","location","send","hitType","page","pathname","search","ym","Router","src_Header_Header","NavLink","exact","to","Switch","Route","path","component","Response","src_QuickInfo_QuickInfo","use","LanguageDetector","initReactI18next","init","resources","en","translations","menu_header_services","menu_checkPort","menu_scanner","menu_whois","menu_ping","menu_response","menu_browserInfo","menu_protocols","sidebar_header_browserInfo","sidebar_quickInfoYourIp","sidebar_quickInfoLocalIp","sidebar_quickInfoBrowser","sidebar_quickInfoOS","sidebar_quickInfoLocations","sidebar_quickInfoUA","common_serverErrorMsg","p_404_pageTitle","p_whois_pageTitle","p_whois_actionBtnTitle","p_whois_domain","p_whois_errInvalidDomain","p_check_pageTitle","p_check_port","p_check_check","p_check_open","p_check_closed","p_check_is","p_check_errBadPort","p_scanner_pageTitle","p_scanner_open","p_scanner_closed","p_scanner_runScanner","p_protocols_pageTitle","p_protocols_errBadPort","p_protocols_port","p_protocols_name","p_protocols_description","p_protocols_notAssigned","p_protocols_getInfo","p_response_pageTitle","p_response_url","p_response_actionBtnTitle","p_response_errInvalidUri","p_response_errUriNotFound","footer_text","ru","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","Sentry","dsn","ReactDOM","es","lib","accounts","src_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b9d41cae.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './myopenports.svg';\nimport {withTranslation} from 'react-i18next';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport './Header.css';\n\nfunction Header({i18n}) {\n\treturn <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n\t\t<div className=\"container\">\n\t\t\t<div className=\"navbar-brand\">\n\t\t\t\t<a className=\"navbar-item\" href=\"/\">\n\t\t\t\t\t<img src={logo} alt=\"MyOpenPorts.com go to home\"/>\n\t\t\t\t\t<span className=\"website-name\">\n\t\t\t\t\tMyOpenPorts\n\t\t\t\t\t\t<span className=\"website-tld\">.com</span>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</div>\n\n\n\t\t\t<div className=\"navbar-menu\">\n\t\t\t\t<div className=\"navbar-end\">\n\t\t\t\t\t<div className=\"navbar-item\">\n\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t\t<a className=\"button is-dark is-small navbar-item\" title=\"Russian language\"\n\t\t\t\t\t\t\t   onClick={() => i18n.changeLanguage('ru')}>\n\t\t\t\t\t\t\t\t<span className=\"country-flag-header\">\n\t\t\t\t\t\t\t\t\t<ReactCountryFlag code='ru' svg/>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tРусский\n\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t\t<a className=\"button is-dark is-small navbar-item\" title=\"English language\"\n\t\t\t\t\t\t\t   onClick={() => i18n.changeLanguage('en')}>\n\t\t\t\t\t\t\t\t<span className=\"country-flag-header\">\n\t\t\t\t\t\t\t\t\t<ReactCountryFlag code='us' svg/>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</nav>;\n}\n\nexport default withTranslation()(Header);","import getUuid from 'uuid-by-string';\nimport 'whatwg-fetch';\n\nconst API_URL = (process.env.NODE_ENV === 'production') ? '/api' : 'http://localhost:3018/api';\n\n/**\n * Performs API request to the backend\n * @param method {string} API method name\n * @param payload {Object} JSON object with a specific for a method params\n * @returns {Promise}\n */\nexport default function (method, payload = {}) {\n\tif (!method || !payload) {\n\t\treturn Promise.reject('bad_params');\n\t}\n\tconst requestKey = getUuid(method);\n\tconst query = Object.keys(payload)\n\t\t.map(k => encodeURIComponent(k) + '=' + encodeURIComponent(payload[k]))\n\t\t.join('&');\n\n\treturn window.fetch(`${API_URL}/${method}?${query}`, {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'X-Request-Key': requestKey\n\t\t}\n\t})\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tif (json.status === 'ok') {\n\t\t\t\treturn Promise.resolve(json);\n\t\t\t} else {\n\t\t\t\tif(process.env.NODE_ENV === 'development') {\n\t\t\t\t\tconsole.error(json);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(json || 'no_error_message');\n\t\t\t}\n\t\t});\n}","import React, {Component} from 'react';\nimport uaParser from 'ua-parser-js';\nimport copy from 'copy-to-clipboard';\nimport ReactCountryFlag from 'react-country-flag';\nimport classnames from 'classnames';\nimport {withTranslation} from 'react-i18next';\n\nimport apiRequest from '../api/api-request';\nimport getLocalIp from './local-ip';\n\nimport './QuickInfo.css';\nimport iconCopy from './icon-copy.svg';\n\nconst METHOD_NAME = 'clientinfo';\nconst DELAY_RESTORE_COPY_BTN = 4500;\n\nclass QuickInfo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuaInfo: uaParser(window.navigator.userAgent),\n\t\t\tip: '',\n\t\t\tcity: '',\n\t\t\tcountry: '',\n\t\t\tregion: '',\n\t\t\tlocalIp: '',\n\t\t\tipCopied: false\n\t\t};\n\n\t\tthis._isMounted = false;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tthis._isMounted && this.requestInformation();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trequestInformation() {\n\t\tapiRequest(METHOD_NAME)\n\t\t\t.then(json => {\n\t\t\t\tthis._isMounted && this.setState({\n\t\t\t\t\tip: json.ip,\n\t\t\t\t\tcity: json.city,\n\t\t\t\t\tcountry: json.country,\n\t\t\t\t\tregion: json.region\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconsole.error(e);\n\t\t\t});\n\n\t\tgetLocalIp()\n\t\t\t.then(localIp => {\n\t\t\t\tthis._isMounted && this.setState({\n\t\t\t\t\tlocalIp\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\t// Just prints error and do nothing\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\tgetLocationInfo() {\n\t\tconst {city = '', country, region} = this.state;\n\n\t\tif (city || country || region) {\n\t\t\tlet str = country || '';\n\t\t\tstr += city ? ` - ${city}` : '';\n\t\t\tstr += region ? ` (${region})` : '';\n\n\t\t\treturn <div className=\"info-item-wrapper\">\n\t\t\t\t<div className=\"info-title\">\n\t\t\t\t\t{this.props.t('sidebar_quickInfoLocations')}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"has-text-right\">\n\t\t\t\t\t<span className=\"country-flag\">\n\t\t\t\t\t\t<ReactCountryFlag code={country.toLowerCase()} svg/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>{str}</span>\n\t\t\t\t</div>\n\t\t\t</div>;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\thandleCopyClick() {\n\t\tcopy(this.state.ip);\n\n\t\tthis.setState({\n\t\t\tipCopied: true\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\tipCopied: false\n\t\t\t});\n\t\t}, DELAY_RESTORE_COPY_BTN);\n\t}\n\n\tprintLocalIp() {\n\t\tif (!this.state.localIp) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn <div className=\"info-item-wrapper\">\n\t\t\t<div className=\"info-title\">{this.props.t('sidebar_quickInfoLocalIp')}</div>\n\t\t\t<div className=\"control is-pulled-right\">\n\t\t\t\t<div className=\"tags has-addons\">\n\t\t\t\t\t<span className=\"tag is-medium ip-tag is-white\">{this.state.localIp}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>;\n\t}\n\n\trender() {\n\t\tconst browserStr = `${this.state.uaInfo.browser.name} ${this.state.uaInfo.browser.version}`;\n\t\tconst osStr = `${this.state.uaInfo.os.name} ${this.state.uaInfo.os.version}`;\n\t\tconst ua = this.state.uaInfo.ua;\n\t\tconst {t} = this.props;\n\t\treturn <div>\n\t\t\t<div className=\"info-item-wrapper\">\n\t\t\t\t<div className=\"info-title\">{t('sidebar_quickInfoYourIp')}</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"control is-pulled-right\">\n\t\t\t\t\t\t<div className=\"tags has-addons\">\n\t\t\t\t\t\t\t<span className=\"tag is-primary is-medium ip-tag\">{this.state.ip}</span>\n\t\t\t\t\t\t\t<a title=\"Copy IP\" data-tooltip=\"Copy IP\"\n\t\t\t\t\t\t\t   className={classnames('tag is-medium ip-copy-btn', {\n\t\t\t\t\t\t\t\t   'is-copied': this.state.ipCopied\n\t\t\t\t\t\t\t   })}\n\t\t\t\t\t\t\t   onClick={() => this.handleCopyClick()}>\n\t\t\t\t\t\t\t\t<img src={iconCopy} alt=\"Copy Icon\" className={classnames('copy-icon', {\n\t\t\t\t\t\t\t\t\t'copied': this.state.ipCopied\n\t\t\t\t\t\t\t\t})}/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{this.printLocalIp()}\n\n\t\t\t<div className=\"info-item-wrapper\">\n\t\t\t\t<div className=\"info-title\">{t('sidebar_quickInfoBrowser')}</div>\n\t\t\t\t<div className=\"has-text-right\">\n\t\t\t\t\t{browserStr}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"info-item-wrapper\">\n\t\t\t\t<div className=\"info-title\">\n\t\t\t\t\t{t('sidebar_quickInfoOS')}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"has-text-right\">\n\t\t\t\t\t{osStr}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"info-item-wrapper\">\n\t\t\t\t<div className=\"info-title\">\n\t\t\t\t\t{t('sidebar_quickInfoUA')}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"is-size-7\">\n\t\t\t\t\t{ua}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{this.getLocationInfo()}\n\t\t</div>;\n\t}\n}\n\nexport default withTranslation()(QuickInfo);","export default function () {\n\tconst noop = () => {\n\t};\n\n\treturn new Promise((resolve) => {\n\t\tconst RTCPeerConnectionConstructor = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n\t\tif (!RTCPeerConnectionConstructor) {\n\t\t\tresolve(null);\n\t\t}\n\t\tconst pc = new RTCPeerConnectionConstructor({\n\t\t\ticeServers: []\n\t\t});\n\n\t\tpc.createDataChannel('');\n\t\tpc.createOffer(pc.setLocalDescription.bind(pc), noop);\n\n\t\tpc.onicecandidate = function (ice) {\n\t\t\tif (!ice || !ice.candidate || !ice.candidate.candidate) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst localIpMatch = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate);\n\t\t\tlet localIp;\n\t\t\tif (localIpMatch && localIpMatch.length) {\n\t\t\t\tlocalIp = localIpMatch[1];\n\t\t\t}\n\t\t\tpc.onicecandidate = noop;\n\n\t\t\tresolve(localIp);\n\t\t};\n\t});\n}\n","import React, {Component} from 'react';\nimport Helmet from 'react-helmet';\nimport classnames from 'classnames';\n\nimport './ServiceBlock.css';\n\nclass ServiceBlock extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\treturn <div>\n\t\t\t<Helmet title={this.props.pageTitle}/>\n\n\t\t\t<h1 className=\"title heading is-size-4\">{this.props.pageTitle}</h1>\n\n\t\t\t<div\n\t\t\t\tclassName=\"service-block columns is-multiline is-centered has-text-centered is-flex\">\n\n\t\t\t\t<div className={classnames('error-message has-text-danger ', {\n\t\t\t\t\t'is-hidden': !this.props.errMsg\n\t\t\t\t})}>\n\t\t\t\t\t{this.props.errMsg}\n\t\t\t\t</div>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\n\t\t\t<div id=\"yandex_rtb_R-A-419701-1\" style={{minHeight: '2px'}}/>\n\t\t\t{\n\t\t\t\t(function (w, d, n, s, t) {\n\t\t\t\t\tw[n] = w[n] || [];\n\t\t\t\t\tw[n].push(function () {\n\t\t\t\t\t\twindow.Ya.Context.AdvManager.render({\n\t\t\t\t\t\t\tblockId: 'R-A-419701-1',\n\t\t\t\t\t\t\trenderTo: 'yandex_rtb_R-A-419701-1',\n\t\t\t\t\t\t\tasync: true\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tt = d.getElementsByTagName('script')[0];\n\t\t\t\t\ts = d.createElement('script');\n\t\t\t\t\ts.type = 'text/javascript';\n\t\t\t\t\ts.src = '//an.yandex.ru/system/context.js';\n\t\t\t\t\ts.async = true;\n\t\t\t\t\tt.parentNode.insertBefore(s, t);\n\t\t\t\t})(window, window.document, 'yandexContextAsyncCallbacks')\n\t\t\t}\n\t\t</div>;\n\t}\n}\n\nexport default ServiceBlock;","import React, {Component} from 'react';\nimport classnames from 'classnames';\nimport {withTranslation} from 'react-i18next';\n\nimport ServiceBlock from '../ServiceBlock';\nimport apiRequest from '../../api/api-request';\nimport './Check.css';\n\nimport enDesc from './desc-en';\nimport ruDesc from './desc-ru';\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\nconst API_METHOD = 'checkport';\n\nclass Check extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecking: false,\n\t\t\tport: '',\n\t\t\terrMsg: '',\n\t\t\tlastResult: false,\n\t\t\tlastProtocol: '',\n\t\t\tisValidPort: true, // assume it is valid by default\n\t\t\tresultShown: false\n\t\t};\n\t}\n\n\trunCheck() {\n\t\tconst {port} = this.state;\n\n\t\tif (!port || isNaN(port)) {\n\t\t\tthis.setState({\n\t\t\t\tisValidPort: false,\n\t\t\t\terrMsg: this.props.t('p_check_errBadPort')\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst portNumber = parseInt(port);\n\t\tif (portNumber < MIN_PORT || portNumber > MAX_PORT) {\n\t\t\tthis.setState({\n\t\t\t\tisValidPort: false,\n\t\t\t\terrMsg: this.props.t('p_check_errBadPort')\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisValidPort: true,\n\t\t\t\tchecking: true,\n\t\t\t\tresultShown: false,\n\t\t\t\terrMsg: ''\n\t\t\t});\n\n\t\t\tapiRequest(API_METHOD, {\n\t\t\t\tport: this.state.port\n\t\t\t})\n\t\t\t\t.then(json => this.processResult(json))\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tchecking: false,\n\t\t\t\t\t\tlastPort: '',\n\t\t\t\t\t\tlastResult: false,\n\t\t\t\t\t\tport: '',\n\t\t\t\t\t\terrMsg: this.props.t('common_serverErrorMsg')\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprocessResult(json) {\n\t\tconst isOpened = json.port_status;\n\t\tthis.setState({\n\t\t\tchecking: false,\n\t\t\tlastPort: this.state.port,\n\t\t\tlastResult: isOpened,\n\t\t\tlastProtocol: json.protocol || '',\n\t\t\tport: '',\n\t\t\tresultShown: true\n\t\t});\n\n\t\t// Set focus again\n\t\tif (this.portInput) {\n\t\t\tthis.portInput.focus();\n\t\t}\n\t}\n\n\thandleKeyPress(e) {\n\t\tif (e.key && e.key.toLowerCase() === 'enter') {\n\t\t\tthis.runCheck();\n\t\t}\n\t}\n\n\thandleChange(e) {\n\t\tconst val = e.target.value;\n\t\tthis.setState({\n\t\t\tisValidPort: true,\n\t\t\terrMsg: '',\n\t\t\tport: val\n\t\t});\n\t}\n\n\tcloseResultHandler() {\n\t\tthis.setState({\n\t\t\tresultShown: false\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {port} = this.state;\n\t\tconst {t} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ServiceBlock pageTitle={t('p_check_pageTitle')} errMsg={this.state.errMsg}>\n\n\t\t\t\t\t<div className=\"column is-8-widescreen is-10-mobile is-11 action-block\">\n\t\t\t\t\t\t<div className=\"field has-addons is-center has-addons\">\n\t\t\t\t\t\t\t<p className=\"control is-hidden-mobile\">\n\t\t\t\t\t\t\t\t<a className=\"button is-static is-medium\">\n\t\t\t\t\t\t\t\t\t{t('p_check_port')}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<div className=\"control is-expanded\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={classnames('input is-medium port-input has-text-centered', {\n\t\t\t\t\t\t\t\t\t\t'is-danger': !this.state.isValidPort\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tref={(input) => {\n\t\t\t\t\t\t\t\t\t\tthis.portInput = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={port}\n\t\t\t\t\t\t\t\t\tplaceholder=\"1-65535\"\n\t\t\t\t\t\t\t\t\tonKeyPress={e => this.handleKeyPress(e)}\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\t\tmaxLength=\"5\"\n\t\t\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\t\t\tdisabled={this.state.checking}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<a className={classnames('button is-info is-medium', {'is-loading': this.state.checking})}\n\t\t\t\t\t\t\t\t   onClick={() => this.runCheck()}>\n\t\t\t\t\t\t\t\t\t{t('p_check_check')}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={classnames('column is-three-fifths is-10-touch notification result-block', {\n\t\t\t\t\t\t'is-hidden': !this.state.resultShown,\n\t\t\t\t\t\t'is-open-color': this.state.lastResult,\n\t\t\t\t\t\t'is-closed-color': !this.state.lastResult\n\t\t\t\t\t})}>\n\t\t\t\t\t\t<button className=\"delete\" onClick={() => {\n\t\t\t\t\t\t\tthis.closeResultHandler();\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t<span className=\"result-port-number\">{t('p_check_port')} <strong>{this.state.lastPort}</strong></span>\n\t\t\t\t\t\t{this.state.lastProtocol ?\n\t\t\t\t\t\t\t<span className=\"result-port-protocol\">[{this.state.lastProtocol}]</span> : ''}\n\t\t\t\t\t\t<span>{t('p_check_is')} {this.state.lastResult ? t('p_check_open') : t('p_check_closed')}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</ServiceBlock>\n\n\t\t\t\t<div className=\"service-description\">\n\t\t\t\t\t{this.props.i18n.language.includes('ru') ? ruDesc() : enDesc()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withTranslation()(Check);","import React from 'react';\n\nexport default function ruDesc () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Что означает результат проверки порта?</h2>\n\n\t\t<p className=\"is-size-5\">Статус <strong className=\"tag is-closed-color\">закрыт</strong></p>\n\t\t<p>Подключиться к этому порту в данный момент невозможно. Вредоносные программы или злоумышленники не могут\n\t\t\tвоспользоваться данным портом для атаки или получения конфиденциальной информации. Если все неизвестные\n\t\t\tпорты имеют статус \"закрыт\", то это означает хороший уровень защищенности компьютера от сетевых угроз.</p>\n\n\t\t<p>Если порт должен быть открытым, то это плохой показатель. Причиной недоступности порта может быть неверная\n\t\t\tнастройка сетевого оборудования или программного обеспечения. Проверьте права доступа программ к сети в\n\t\t\tфайерволе. Удостоверьтесь, что порты проброшены через роутер.</p>\n\n\t\t<p>Результат \"порт закрыт\" также можно получить, если порт открыт, но время отклика вашего компьютера в сети\n\t\t\t(пинг) завышено. Подключится к порту в таких условиях практически не представляется возможным.</p>\n\n\t\t<p className=\"is-size-5\">Статус <strong className=\"tag is-open-color\">открыт</strong></p>\n\t\t<p>\n\t\t\tК данному порту можно произвести подключение, он доступен из интернета. Если это то, что требуется —\n\t\t\tпрекрасно.</p>\n\n\t\t<p>Если неизвестна причина, по которой порт может быть открытым, то стоит проверить запущенные программы и\n\t\t\tсервисы. Возможно, некоторые из них вполне легально используют этот порт для работы с сетью. Существует\n\t\t\tвероятность, что порт открыт в следствии работы несанкционированного/вредоносного программного обеспечения.\n\t\t\tВ таком случае рекомендуется проверить компьютер антивирусом.</p>\n\t</div>;\n}","import React from 'react';\n\nexport default function enDesc () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">What does the port check result mean?</h2>\n\t\t<p className=\"is-size-5\">Port status is <strong className=\"tag is-closed-color\">closed</strong></p>\n\t\t<p>Connecting to this port is currently not possible. Malicious programs or intruders cannot use\n\t\t\tthis\n\t\t\tport to attack or obtain confidential information. If all unknown ports have the status of\n\t\t\t\"closed\",\n\t\t\tthen this means a good level of protection of the computer from network threats.</p>\n\n\t\t<p>If the port should be open, then this is a bad indicator. The reason for the port inaccessibility\n\t\t\tmay be incorrect configuration of network equipment or software. Check the access rights of\n\t\t\tprograms\n\t\t\tto the network in the firewall. Make sure the ports are routed through the router.</p>\n\n\t\t<p>The \"port closed\" result can also be obtained if the port is open, but the response time of your\n\t\t\tcomputer on the network (ping) is too high. It is practically impossible to connect to the port\n\t\t\tin\n\t\t\tsuch conditions.</p>\n\n\t\t<p className=\"is-size-5\">Port status is <strong className=\"tag is-open-color\">opened</strong></p>\n\t\t<p>\n\t\t\tYou can connect to this port, it is accessible from the Internet. If this is what is required -\n\t\t\tfine.</p>\n\n\t\t<p>If the reason for which the port may be open is unknown, then it is worth checking the running\n\t\t\tprograms and services. Perhaps some of them quite legally use this port to work with the\n\t\t\tnetwork.\n\t\t\tThere is a possibility that the port is open due to unauthorized / malicious software. In this\n\t\t\tcase,\n\t\t\tit is recommended to check the computer with an antivirus.</p>\n\t</div>;\n}","import React, {Component} from 'react';\nimport ServiceBlock from '../ServiceBlock';\nimport classnames from 'classnames';\nimport {withTranslation} from 'react-i18next';\n\nimport enDesc from './desc-en';\nimport ruDesc from './desc-ru';\n\nimport apiRequest from '../../api/api-request';\nimport './Scanner.css';\n\nclass Scanner extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecking: false,\n\t\t\tresultShown: false,\n\t\t\tlastResult: null\n\t\t};\n\t}\n\n\trunCheck() {\n\t\tthis.setState({\n\t\t\tchecking: true\n\t\t});\n\n\t\tapiRequest('scanner')\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tchecking: false,\n\t\t\t\t\tresultShown: true,\n\t\t\t\t\tlastResult: json.scan_results\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tchecking: false,\n\t\t\t\t\tlastResult: null,\n\t\t\t\t\terrMsg: this.props.t('common_serverErrorMsg')\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tparseResults(jsonRes) {\n\t\tif (!jsonRes || typeof jsonRes !== 'object') {\n\t\t\treturn null;\n\t\t}\n\t\tconst {t} = this.props;\n\t\treturn <div className=\"columns is-multiline result-list\">\n\t\t\t{\n\t\t\t\tObject.keys(jsonRes).map(port => {\n\t\t\t\t\tconst {status, protocol} = jsonRes[port];\n\n\t\t\t\t\treturn <div key={port} className=\"tags has-addons port-result-tag\">\n\t\t\t\t\t\t<span className=\"tag grow\">{protocol}</span>\n\t\t\t\t\t\t<span className=\"tag grow has-text-weight-bold\">{port}</span>\n\t\t\t\t\t\t<span className={classnames('tag', {\n\t\t\t\t\t\t\t'is-open-color': status,\n\t\t\t\t\t\t\t'is-closed-color': !status\n\t\t\t\t\t\t})}>{status ? t('p_scanner_open') : t('p_scanner_closed')}</span>\n\t\t\t\t\t</div>;\n\t\t\t\t})\n\t\t\t}\n\t\t</div>;\n\t}\n\n\trender() {\n\t\tconst {t} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ServiceBlock pageTitle={t('p_scanner_pageTitle')} errMsg={this.state.errMsg}>\n\t\t\t\t\t<div className=\"column is-6 is-6-mobile is-centered action-block\">\n\t\t\t\t\t\t<a className={classnames('button is-info is-medium is-fullwidth', {'is-loading': this.state.checking})}\n\t\t\t\t\t\t   onClick={() => this.runCheck()}>\n\t\t\t\t\t\t\t{t('p_scanner_runScanner')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={classnames('column is-11 is-8-mobile', {'is-hidden': !this.state.resultShown})}>\n\t\t\t\t\t\t{this.parseResults(this.state.lastResult)}\n\t\t\t\t\t</div>\n\t\t\t\t</ServiceBlock>\n\n\t\t\t\t<div className=\"service-description\">\n\t\t\t\t\t{this.props.i18n.language.includes('ru') ? ruDesc() : enDesc()}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withTranslation()(Scanner);","import React from 'react';\n\nexport default function () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">О сканнере</h2>\n\t\t<p>Сканер портов позволяет произвести экспресс-проверку наиболее популярных портов на вашем компьютере.\n\t\t\tСканирование длится менее минуты, после чего будет выведен результат, в виде таблицы.</p>\n\n\t\t<p>Стоит отметить, что при таком экспресс-сканировании время, отведенное на подключение к порту меньше, чем при\n\t\t\tобычной проверке порта.</p>\n\n\t\t<h3 className=\"is-size-4\">\n\t\t\tКакие порты проверяются?\n\t\t</h3>\n\t\t<br/>\n\t\t<table className=\"table is-narrow is-striped port-table\">\n\t\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>№</th>\n\t\t\t\t<th>Порт</th>\n\t\t\t\t<th>Протокол</th>\n\t\t\t\t<th>Описание</th>\n\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>20</td>\n\t\t\t\t<td>FTP Data</td>\n\t\t\t\t<td>File Transfer Protocol — протокол передачи файлов. Порт для данных.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>21</td>\n\t\t\t\t<td>FTP Control</td>\n\t\t\t\t<td>File Transfer Protocol — протокол передачи файлов. Порт для команд.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>22</td>\n\t\t\t\t<td>SSH</td>\n\t\t\t\t<td>Secure SHell — \"безопасная оболочка\". Протокол удаленного управления операционной системой.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>23</td>\n\t\t\t\t<td>telnet</td>\n\t\t\t\t<td>TErminaL NETwork. Протокол реализации текстового интерфейса по сети.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>25</td>\n\t\t\t\t<td>SMTP</td>\n\t\t\t\t<td>Simple Mail Transfer Protocol — простой протокол передачи почты.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>42</td>\n\t\t\t\t<td>WINS</td>\n\t\t\t\t<td>Windows Internet Name Service. Служба сопоставления NetBIOS-имён компьютеров с IP-адресами узлов.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>43</td>\n\t\t\t\t<td>WHOIS</td>\n\t\t\t\t<td>\"Who is\". Протокол получения регистрационных данных о владельцах доменных имён и IP адресах.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>53</td>\n\t\t\t\t<td>DNS</td>\n\t\t\t\t<td>Domain Name System — система доменных имён.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>67</td>\n\t\t\t\t<td>DHCP</td>\n\t\t\t\t<td>Dynamic Host Configuration Protocol — протокол динамической настройки узла. Получение динамических\n\t\t\t\t\tIP.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>69</td>\n\t\t\t\t<td>TFTP</td>\n\t\t\t\t<td>Trivial File Transfer Protocol — простой протокол передачи файлов.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>80</td>\n\t\t\t\t<td>HTTP / Web</td>\n\t\t\t\t<td>HyperText Transfer Protocol — протокол передачи гипертекста.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>110</td>\n\t\t\t\t<td>POP3</td>\n\t\t\t\t<td>Post Office Protocol Version 3 — протокол получения электронной почты, версия 3.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>115</td>\n\t\t\t\t<td>SFTP</td>\n\t\t\t\t<td>SSH File Transfer Protocol. Протокол защищенной передачи данных.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>123</td>\n\t\t\t\t<td>NTP</td>\n\t\t\t\t<td>Network Time Protocol. Протокол синхронизации внутренних часов компьютера.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>137</td>\n\t\t\t\t<td>NetBIOS</td>\n\t\t\t\t<td>Network Basic Input/Output System. Протокол обеспечения сетевых операций ввода/вывода. Служба\n\t\t\t\t\tимен.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>138</td>\n\t\t\t\t<td>NetBIOS</td>\n\t\t\t\t<td>Network Basic Input/Output System. Протокол обеспечения сетевых операций ввода/вывода. Служба\n\t\t\t\t\tсоединения.\n\t\t\t\t\tservice\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>139</td>\n\t\t\t\t<td>NetBIOS</td>\n\t\t\t\t<td>Network Basic Input/Output System. Протокол обеспечения сетевых операций ввода/вывода. Служба\n\t\t\t\t\tсессий.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>143</td>\n\t\t\t\t<td>IMAP</td>\n\t\t\t\t<td>Internet Message Access Protocol. Протокол прикладного уровня для доступа к электронной\n\t\t\t\t\tпочте.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>161</td>\n\t\t\t\t<td>SNMP</td>\n\t\t\t\t<td>Simple Network Management Protocol — простой протокол сетевого управления. Управление\n\t\t\t\t\tустройствами.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>179</td>\n\t\t\t\t<td>BGP</td>\n\t\t\t\t<td>Border Gateway Protocol, протокол граничного шлюза. Протокол динамической маршрутизации.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>443</td>\n\t\t\t\t<td>HTTPS</td>\n\t\t\t\t<td>HyperText Transfer Protocol Secure) — протокол HTTP, поддерживающий шифрование.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>445</td>\n\t\t\t\t<td>SMB</td>\n\t\t\t\t<td>Server Message Block. Протокол удалённого доступа к файлам, принтерам и сетевым ресурсам.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>514</td>\n\t\t\t\t<td>Syslog</td>\n\t\t\t\t<td>System Log. Протокол отправки и регистрации сообщений о происходящих системных событиях.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>515</td>\n\t\t\t\t<td>LPD</td>\n\t\t\t\t<td>Line Printer Daemon. Протокол удаленной печати на принтере.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>993</td>\n\t\t\t\t<td>IMAP SSL</td>\n\t\t\t\t<td>Протокол IMAP, поддерживающий SSL шифрование.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>995</td>\n\t\t\t\t<td>POP3 SSL</td>\n\t\t\t\t<td>Протокол POP3 поддерживающий SSL шифрование.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1080</td>\n\t\t\t\t<td>SOCKS</td>\n\t\t\t\t<td>SOCKet Secure. Протокол получения защищенного анонимного доступа.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1194</td>\n\t\t\t\t<td>OpenVPN</td>\n\t\t\t\t<td>Открытая реализация технологии Виртуальной Частной Сети (VPN).</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1433</td>\n\t\t\t\t<td>MSSQL</td>\n\t\t\t\t<td>Microsoft SQL Server — система управления базами данных. Порт доступа к базе.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1702</td>\n\t\t\t\t<td>L2TP (IPsec)</td>\n\t\t\t\t<td>Протокол поддержки виртуальных частных сетей. А также набор протоколов обеспечения защиты данных.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1723</td>\n\t\t\t\t<td>PPTP</td>\n\t\t\t\t<td>Туннельный протокол защищённого соединения с сервером типа точка-точка.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3000</td>\n\t\t\t\t<td>Dev</td>\n\t\t\t\t<td>Попурялный порт для веб-разработки</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3128</td>\n\t\t\t\t<td>Proxy</td>\n\t\t\t\t<td>В данный момент порт часто используется прокси-серверами.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3268</td>\n\t\t\t\t<td>LDAP</td>\n\t\t\t\t<td>Lightweight Directory Access Protocol — облегчённый протокол доступа к каталогам (службе\n\t\t\t\t\tкаталогов).\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3306</td>\n\t\t\t\t<td>MySQL</td>\n\t\t\t\t<td>Доступ к MySQL базам данных.directory access protocol\n\t\t\t\t\t(directory service).\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3389</td>\n\t\t\t\t<td>RDP</td>\n\t\t\t\t<td>Remote Desktop Protocol — протокол удалённого рабочего стола для Windows.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5432</td>\n\t\t\t\t<td>PostgreSQL</td>\n\t\t\t\t<td>Доступ к PostgreSQL базам данных.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5060</td>\n\t\t\t\t<td>SIP</td>\n\t\t\t\t<td>Протокол установления сеанса и передачи мультимедиа содержимого.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5900</td>\n\t\t\t\t<td>VNC</td>\n\t\t\t\t<td>Virtual Network Computing — система удалённого доступа к рабочему столу компьютера.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5938</td>\n\t\t\t\t<td>TeamViewer</td>\n\t\t\t\t<td>TeamViewer — система обеспечения удалённого контроля компьютера и обмена данными.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>8080</td>\n\t\t\t\t<td>HTTP / Web</td>\n\t\t\t\t<td>Альтернативный порт для HTTP протокола. Иногда используется прокси-серверами.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>10000</td>\n\t\t\t\t<td>NDMP</td>\n\t\t\t\t<td>Популярный порт: Webmin, SIP-голос, VPN IPSec over TCP.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>20000</td>\n\t\t\t\t<td>DNP</td>\n\t\t\t\t<td>Популярный порт: Usermin, SIP-голос.</td>\n\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>;\n}","import React from 'react';\n\nexport default function () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">About the scanner</h2>\n\t\t<p>Port scanner allows you to make an express check of the most popular ports on your computer.\n\t\t\tScanning takes less than a minute, the result will be displayed as a table.</p>\n\n\t\t<p>It is worth noting that with such an express scan, the time allotted for connecting to the port\n\t\t\tis less than with the usual port verification.</p>\n\n\t\t<h3 className=\"is-size-4\">\n\t\t\tPort checklist\n\t\t</h3>\n\t\t<br/>\n\t\t<table className=\"table is-narrow is-striped port-table\">\n\t\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>№</th>\n\t\t\t\t<th>Port</th>\n\t\t\t\t<th>Protocol</th>\n\t\t\t\t<th>Description</th>\n\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>20</td>\n\t\t\t\t<td>FTP Data</td>\n\t\t\t\t<td>File Transfer Protocol - file transfer protocol. Port for data.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>21</td>\n\t\t\t\t<td>FTP Control</td>\n\t\t\t\t<td>File Transfer Protocol - file transfer protocol. Port for commands.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>22</td>\n\t\t\t\t<td>SSH</td>\n\t\t\t\t<td>Secure SHell - \"secure shell\". The protocol for remote control of the operating\n\t\t\t\t\tsystem.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>23</td>\n\t\t\t\t<td>telnet</td>\n\t\t\t\t<td>TErminaL NETwork. The protocol for implementing a text-based interface over a\n\t\t\t\t\tnetwork.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>25</td>\n\t\t\t\t<td>SMTP</td>\n\t\t\t\t<td>Simple Mail Transfer Protocol - simple mail transfer protocol.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>42</td>\n\t\t\t\t<td>WINS</td>\n\t\t\t\t<td>Windows Internet Name Service. The NetBIOS-Computer Name Mapping Service with host\n\t\t\t\t\tIP addresses.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>43</td>\n\t\t\t\t<td>WHOIS</td>\n\t\t\t\t<td>\"Who is\". The protocol for obtaining registration data on the owners of domain\n\t\t\t\t\tnames and IP addresses.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>53</td>\n\t\t\t\t<td>DNS</td>\n\t\t\t\t<td>Domain Name System - domain name system.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>67</td>\n\t\t\t\t<td>DHCP</td>\n\t\t\t\t<td>Dynamic Host Configuration Protocol - Dynamic Host Configuration Protocol. Getting\n\t\t\t\t\tdynamic IP.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>69</td>\n\t\t\t\t<td>TFTP</td>\n\t\t\t\t<td>Trivial File Transfer Protocol is a simple file transfer protocol.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>80</td>\n\t\t\t\t<td>HTTP / Web</td>\n\t\t\t\t<td>HyperText Transfer Protocol - hypertext transfer protocol.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>110</td>\n\t\t\t\t<td>POP3</td>\n\t\t\t\t<td>Post Office Protocol Version 3 - protocol for receiving e-mail, version 3.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>115</td>\n\t\t\t\t<td>SFTP</td>\n\t\t\t\t<td>SSH File Transfer Protocol. Secure Data Transfer Protocol.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>123</td>\n\t\t\t\t<td>NTP</td>\n\t\t\t\t<td>Network Time Protocol. The synchronization protocol of the internal clock of the\n\t\t\t\t\tcomputer.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>137</td>\n\t\t\t\t<td>NetBIOS</td>\n\t\t\t\t<td>Network Basic Input / Output System. Network I / O protocol. Name service.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>138</td>\n\t\t\t\t<td>NetBIOS</td>\n\t\t\t\t<td>Network Basic Input / Output System. Network I / O protocol. Connection\n\t\t\t\t\tservice\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>139</td>\n\t\t\t\t<td>NetBIOS</td>\n\t\t\t\t<td>Network Basic Input / Output System. Network I / O protocol. Session service.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>143</td>\n\t\t\t\t<td>IMAP</td>\n\t\t\t\t<td>Internet Message Access Protocol. Application level protocol for accessing email.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>161</td>\n\t\t\t\t<td>SNMP</td>\n\t\t\t\t<td>Simple Network Management Protocol is a simple network management protocol. Device\n\t\t\t\t\tmanagement.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>179</td>\n\t\t\t\t<td>BGP</td>\n\t\t\t\t<td>Border Gateway Protocol, Border Gateway Protocol. Dynamic Routing Protocol.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>443</td>\n\t\t\t\t<td>HTTPS</td>\n\t\t\t\t<td>HyperText Transfer Protocol Secure) - HTTP protocol that supports encryption.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>445</td>\n\t\t\t\t<td>SMB</td>\n\t\t\t\t<td>Server Message Block. The protocol of remote access to files, printers and network\n\t\t\t\t\tresources.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>514</td>\n\t\t\t\t<td>Syslog</td>\n\t\t\t\t<td>System Log. The protocol for sending and recording messages about ongoing system\n\t\t\t\t\tevents.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>515</td>\n\t\t\t\t<td>LPD</td>\n\t\t\t\t<td>Line Printer Daemon. Remote printing protocol on the printer.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>993</td>\n\t\t\t\t<td>IMAP SSL</td>\n\t\t\t\t<td>The IMAP protocol that supports SSL encryption.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>995</td>\n\t\t\t\t<td>POP3 SSL</td>\n\t\t\t\t<td>POP3 protocol supporting SSL encryption.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1080</td>\n\t\t\t\t<td>SOCKS</td>\n\t\t\t\t<td>SOCKet Secure. The protocol for obtaining secure anonymous access.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1194</td>\n\t\t\t\t<td>OpenVPN</td>\n\t\t\t\t<td>Open implementation of Virtual Private Network (VPN) technology.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1433</td>\n\t\t\t\t<td>MSSQL</td>\n\t\t\t\t<td>Microsoft SQL Server - database management system. Port access to the database.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1702</td>\n\t\t\t\t<td>L2TP (IPsec)</td>\n\t\t\t\t<td> Virtual Private Networks Support Protocol. As well as a set of data\n\t\t\t\t\tprotection protocols.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>1723</td>\n\t\t\t\t<td>PPTP</td>\n\t\t\t\t<td>Tunnel protocol for secure connection with a point-to-point server.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3000</td>\n\t\t\t\t<td>Dev</td>\n\t\t\t\t<td>Popular port for web-development.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3128</td>\n\t\t\t\t<td>Proxy</td>\n\t\t\t\t<td>This port is often used by proxy servers.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3268</td>\n\t\t\t\t<td>LDAP</td>\n\t\t\t\t<td>Lightweight Directory Access Protocol - a lightweight directory access protocol\n\t\t\t\t\t(directory service).\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3306</td>\n\t\t\t\t<td>MySQL</td>\n\t\t\t\t<td>Access to MySQL databases.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>3389</td>\n\t\t\t\t<td>RDP</td>\n\t\t\t\t<td>Remote Desktop Protocol - Remote Desktop Protocol for Windows.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5432</td>\n\t\t\t\t<td>PostgreSQL</td>\n\t\t\t\t<td>Access to PostgreSQL databases.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5060</td>\n\t\t\t\t<td>SIP</td>\n\t\t\t\t<td>Protocol for establishing a session and transmitting multimedia content.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5900</td>\n\t\t\t\t<td>VNC</td>\n\t\t\t\t<td>Virtual Network Computing - a system for remote access to the desktop computer.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>5938</td>\n\t\t\t\t<td>TeamViewer</td>\n\t\t\t\t<td>TeamViewer is a system for providing remote control of a computer and data\n\t\t\t\t\texchange.\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>8080</td>\n\t\t\t\t<td>HTTP / Web</td>\n\t\t\t\t<td>Alternative port for HTTP protocol. Sometimes used by proxy servers.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>10000</td>\n\t\t\t\t<td>NDMP</td>\n\t\t\t\t<td>Popular port: Webmin, SIP voice, VPN IPSec over TCP.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td/>\n\t\t\t\t<td>20000</td>\n\t\t\t\t<td>DNP</td>\n\t\t\t\t<td>Popular port: Usermin, SIP voice.</td>\n\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>;\n}","import React, {Component} from 'react';\nimport classnames from 'classnames';\nimport {withTranslation} from 'react-i18next';\n\nimport ServiceBlock from '../ServiceBlock';\nimport apiRequest from '../../api/api-request';\n\nimport enDesc from './desc-en';\nimport ruDesc from './desc-ru';\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\nconst API_METHOD = 'portinfo';\n\nclass Protocols extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecking: false,\n\t\t\tport: '',\n\t\t\tlastPort: '',\n\t\t\terrMsg: '',\n\t\t\tlastResult: false,\n\t\t\tisValidPort: true, // assume it is valid by default\n\t\t\tresultShown: false\n\t\t};\n\t}\n\n\trunCheck() {\n\t\tconst {port} = this.state;\n\t\tconst {t} = this.props;\n\n\t\tif (!port || isNaN(port)) {\n\t\t\tthis.setState({\n\t\t\t\tisValidPort: false,\n\t\t\t\terrMsg: t('p_protocols_errBadPort')\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst portNumber = parseInt(port);\n\t\tif (portNumber < MIN_PORT || portNumber > MAX_PORT) {\n\t\t\tthis.setState({\n\t\t\t\tisValidPort: false,\n\t\t\t\terrMsg: t('p_protocols_errBadPort')\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisValidPort: true,\n\t\t\t\tchecking: true,\n\t\t\t\tresultShown: false,\n\t\t\t\terrMsg: ''\n\t\t\t});\n\n\t\t\tapiRequest(API_METHOD, {\n\t\t\t\tport: this.state.port\n\t\t\t})\n\t\t\t\t.then(json => this.processResult(json))\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tchecking: false,\n\t\t\t\t\t\tlastPort: '',\n\t\t\t\t\t\tlastResult: false,\n\t\t\t\t\t\tport: '',\n\t\t\t\t\t\terrMsg: t('common_serverErrorMsg')\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t}\n\n\tprocessResult(json) {\n\t\tconst info = json.info;\n\t\tthis.setState({\n\t\t\tchecking: false,\n\t\t\tlastPort: this.state.port,\n\t\t\tlastResult: info,\n\t\t\tport: '',\n\t\t\tresultShown: true\n\t\t});\n\n\t\t// Set focus again\n\t\tif (this.portInput) {\n\t\t\tthis.portInput.focus();\n\t\t}\n\t}\n\n\tprintResults() {\n\t\tconst result = this.state.lastResult;\n\t\tconst {t} = this.props;\n\t\tif (result) {\n\t\t\treturn <div className=\"box has-text-left\">\n\t\t\t\t<div>{t('p_protocols_port')}: <strong>{this.state.lastPort}</strong></div>\n\t\t\t\t<div>{t('p_protocols_name')}: <strong>{result.name}</strong></div>\n\t\t\t\t<div>{t('p_protocols_description')}: <strong>{result.description}</strong></div>\n\t\t\t</div>;\n\t\t} else {\n\t\t\treturn <div className=\"box has-text-centered\">\n\t\t\t\t{t('p_protocols_port')} <strong>{this.state.lastPort}</strong> {t('p_protocols_notAssigned')}\n\t\t\t</div>;\n\t\t}\n\t}\n\n\thandleKeyPress(e) {\n\t\tif (e.key && e.key.toLowerCase() === 'enter') {\n\t\t\tthis.runCheck();\n\t\t}\n\t}\n\n\thandleChange(e) {\n\t\tconst val = e.target.value;\n\t\tthis.setState({\n\t\t\tisValidPort: true,\n\t\t\terrMsg: '',\n\t\t\tport: val\n\t\t});\n\t}\n\n\tcloseResultHandler() {\n\t\tthis.setState({\n\t\t\tresultShown: false\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {port} = this.state;\n\t\tconst {t} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ServiceBlock pageTitle={t('p_protocols_pageTitle')} errMsg={this.state.errMsg}>\n\t\t\t\t\t<div className=\"column is-8-desktop is-6-fullhd is-8-touch action-block\">\n\t\t\t\t\t\t<div className=\"field has-addons is-center\">\n\t\t\t\t\t\t\t<div className=\"control is-expanded\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={classnames('input is-medium port-input has-text-centered', {\n\t\t\t\t\t\t\t\t\t\t'is-danger': !this.state.isValidPort\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tref={(input) => {\n\t\t\t\t\t\t\t\t\t\tthis.portInput = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={port}\n\t\t\t\t\t\t\t\t\tplaceholder=\"1-65535\"\n\t\t\t\t\t\t\t\t\tonKeyPress={e => this.handleKeyPress(e)}\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\t\tmaxLength=\"5\"\n\t\t\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\t\t\tdisabled={this.state.checking}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<a className={classnames('button is-info is-medium', {'is-loading': this.state.checking})}\n\t\t\t\t\t\t\t\t   onClick={() => this.runCheck()}>\n\t\t\t\t\t\t\t\t\t{t('p_protocols_getInfo')}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={classnames('column is-two-thirds is-10-mobile', {\n\t\t\t\t\t\t'is-hidden': !this.state.resultShown\n\t\t\t\t\t})}>\n\t\t\t\t\t\t{this.printResults()}\n\t\t\t\t\t</div>\n\t\t\t\t</ServiceBlock>\n\n\t\t\t\t<div className=\"service-description\">\n\t\t\t\t\t{this.props.i18n.language.includes('ru') ? ruDesc() : enDesc()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withTranslation()(Protocols);","import React from 'react';\n\nexport default function ruDesc () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Соответствие портов и протоколов</h2>\n\t\t<p>Данный сервис позволяет сопоставить номер порта одному или нескольким сетевым протоколам, в рамках которых\n\t\t\tданный порт обычно используется. Сервис полезен, когда неизвестна причина, по которой открыт порт.</p>\n\n\t\t<p>Для поиска используется официальная база портов и протоколов от IANA (Internet Assigned Numbers Authority).\n\t\t\tIANA – организация, управляющая параметрами протоколов интернета, а также пространствами IP адресов и\n\t\t\tдоменами верхнего уровня.</p>\n\n\t\t<h3 className=\"is-size-5\">Основные диапазоны портов</h3>\n\t\t<p>Весь диапазон номеров портов (от 0 до 65535) разделен на три категории.\n\n\t\t</p>\n\n\t\t<strong>0 — 1023 Общеизвестные порты</strong>\n\t\t<p>Номера зарезервированы IANA для системных процессов или сетевых программ с административными правами. Порты\n\t\t\tиз данной категории не должны использоваться без регистрации у IANA.</p>\n\n\t\t<strong>1024 — 49151 Зарегистрированные порты</strong>\n\t\t<p>Порты, зарегистрированные для использования обычными программами и протоколами прикладного уровня. Это\n\t\t\tкатегория портов наиболее популярна для коммерческого программного обеспечения. Также требуется регистрация\n\t\t\tна использование какого-либо порта.</p>\n\n\t\t<strong>49152 — 65535 Динамические порты</strong>\n\t\t<p>Предназначены для свободного, но временного использования. Регистрация портов этой категории невозможна.</p>\n\t</div>;\n}","import React from 'react';\n\nexport default function enDesc () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Port and protocol specifications</h2>\n\t\t<p>This service allows you to map the port number to one or more network protocols, within which\n\t\t\tthis port is usually used. The service is useful when the reason for opening the port is\n\t\t\tunknown.</p>\n\n\t\t<p>For the search, the official database of ports and protocols from IANA (Internet Assigned Numbers\n\t\t\tAuthority) is used. The IANA is the organization that manages Internet protocol parameters, as\n\t\t\twell as IP address spaces and top-level domains.</p>\n\n\t\t<h3 className=\"is-size-5\">Port ranges</h3>\n\t\t<p>The entire range of port numbers (from 0 to 65535) is divided into three categories.</p>\n\n\t\t<strong>0 - 1023 Well-Known Ports</strong>\n\t\t<p>The numbers are reserved by IANA for system processes or network programs with administrative\n\t\t\trights. Ports from this category should not be used without registering with IANA.</p>\n\n\t\t<strong>1024 - 49151 Registered ports</strong>\n\t\t<p>Ports registered for use by conventional programs and application layer protocols. This category\n\t\t\tof ports is most popular for commercial software. Registration is also required to use any\n\t\t\tport.</p>\n\n\t\t<strong>49152 - 65535 Dynamic Ports</strong>\n\t\t<p>Designed for free but temporary use. Registration of ports in this category is not possible.</p>\n\t</div>;\n}","import React, {Component} from 'react';\nimport {withTranslation} from 'react-i18next';\nimport {isWebUri} from 'valid-url';\nimport Url from 'url';\nimport isIpCheck from 'is-ip';\n\nimport ServiceBlock from '../ServiceBlock';\nimport classnames from 'classnames';\nimport apiRequest from '../../api/api-request';\n\nimport enDesc from './desc-en';\nimport ruDesc from './desc-ru';\n\nimport './Response.css';\n\nconst API_METHOD = 'response';\n\nclass Whois extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\turi: '',\n\t\t\tlastUri: '',\n\t\t\tchecking: false,\n\t\t\tlastResult: '',\n\t\t\tlastResultCode: null,\n\t\t\tlastResultCodeMsg: null,\n\t\t\tlastResultRedirects: [],\n\t\t\tisValidUri: true,\n\t\t\tresultShown: false,\n\t\t\terrMsg: ''\n\t\t};\n\t}\n\n\trunCheck() {\n\t\tlet {uri} = this.state;\n\t\tconst isIp = isIpCheck(uri);\n\n\t\t// Prepend protocol\n\t\tif (!uri.startsWith('http') && !isIp) {\n\t\t\turi = 'http://' + uri;\n\t\t}\n\t\tconst parsedUri = Url.parse(uri);\n\n\t\tif (!isIp) {\n\t\t\tif (!parsedUri.hostname || !parsedUri.hostname.includes('.')) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisValidUri: false,\n\t\t\t\t\terrMsg: this.props.t('p_response_errInvalidUri')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isWebUri(uri)) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisValidUri: false,\n\t\t\t\t\terrMsg: this.props.t('p_response_errInvalidUri')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tisValidUri: true,\n\t\t\terrMsg: '',\n\t\t\tchecking: true\n\t\t});\n\n\t\tapiRequest(API_METHOD, {uri})\n\t\t\t.then(json => this.processResult(json))\n\t\t\t.catch(err => this.processError(err));\n\t}\n\n\tprocessResult(json) {\n\t\tthis.setState({\n\t\t\tchecking: false,\n\t\t\tlastResult: json.response.headers,\n\t\t\tlastResultCode: json.response.code,\n\t\t\tlastResultCodeMsg: json.response.code_msg,\n\t\t\tlastResultRedirects: json.response.redirects,\n\t\t\tresultShown: true,\n\t\t\turi: '',\n\t\t\tlastUri: this.state.uri\n\t\t});\n\n\t\t// Set focus again\n\t\tif (this.uriInput) {\n\t\t\tthis.uriInput.focus();\n\t\t}\n\t}\n\n\tprocessError(err) {\n\t\tif (err && err.code_name === 'not_found') {\n\t\t\tthis.setState({\n\t\t\t\terrMsg: this.props.t('p_response_errUriNotFound')\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terrMsg: this.props.t('common_serverErrorMsg')\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\turi: '',\n\t\t\tlastUri: '',\n\t\t\tchecking: false,\n\t\t\tisValidUri: true,\n\t\t\tlastResults: null,\n\t\t\tresultShown: false\n\t\t});\n\t}\n\n\tprintResults() {\n\t\tconst response = this.state.lastResult;\n\n\t\tif (response) {\n\t\t\tconst headers = Object.keys(response);\n\n\t\t\treturn headers.map(header => {\n\t\t\t\tconst val = typeof response[header] === 'string' ? response[header] : response[header].join('<br>');\n\n\t\t\t\treturn <div key={header} className=\"\">\n\t\t\t\t\t<div className=\"has-text-weight-bold\">{header}</div>\n\t\t\t\t\t<div className=\"is-family-monospace header-value\">{val}</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t</div>;\n\t\t\t});\n\t\t}\n\t}\n\n\thandleKeyPress(e) {\n\t\tif (e.key && e.key.toLowerCase() === 'enter') {\n\t\t\tthis.runCheck();\n\t\t}\n\t}\n\n\thandleChange(e) {\n\t\tconst val = e.target.value;\n\t\tthis.setState({\n\t\t\tisValidUri: true,\n\t\t\terrMsg: '',\n\t\t\turi: val.trim()\n\t\t});\n\t}\n\n\n\trender() {\n\t\tconst {uri} = this.state;\n\t\tconst {t} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ServiceBlock pageTitle={t('p_response_pageTitle')} errMsg={this.state.errMsg}>\n\t\t\t\t\t<div className=\"column is-10-fullhd is-11 action-block\">\n\t\t\t\t\t\t<div className=\"field has-addons is-center\">\n\t\t\t\t\t\t\t<p className=\"control is-hidden-touch\">\n\t\t\t\t\t\t\t\t<a className=\"button is-static is-medium\">\n\t\t\t\t\t\t\t\t\t{t('p_response_url')}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<div className=\"control is-expanded\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={classnames('input is-medium has-text-centered', {\n\t\t\t\t\t\t\t\t\t\t'is-danger': !this.state.isValidUri\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tref={(input) => {\n\t\t\t\t\t\t\t\t\t\tthis.uriInput = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={uri}\n\t\t\t\t\t\t\t\t\tplaceholder=\"https://example.com\"\n\t\t\t\t\t\t\t\t\tonKeyPress={e => this.handleKeyPress(e)}\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\t\tdisabled={this.state.checking}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<a className={classnames('button is-info is-medium', {'is-loading': this.state.checking})}\n\t\t\t\t\t\t\t\t   onClick={() => this.runCheck()}>\n\t\t\t\t\t\t\t\t\t{t('p_response_actionBtnTitle')}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classnames('has-text-left result-text-block column is-11 is-11-mobile', {'is-hidden': !this.state.resultShown})}>\n\t\t\t\t\t\t<div className=\"has-text-weight-semibold request-uri\">URL: {this.state.lastUri}</div>\n\t\t\t\t\t\t<div className=\"redirect-chain-block\">\n\t\t\t\t\t\t\t{this.state.lastResultRedirects.map(redir => {\n\t\t\t\t\t\t\t\treturn <div key={redir.redirectUri} className=\"redirect-chain-item\">\n\t\t\t\t\t\t\t\t\t&rarr; <span className=\"tag is-dark\">{redir.statusCode}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"is-family-monospace redirect-uri\">{redir.redirectUri}</span>\n\t\t\t\t\t\t\t\t</div>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"control tag-response-code\">\n\t\t\t\t\t\t\t\t<span>&rarr; </span>\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons is-inline-block\">\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-dark\">{this.state.lastResultCode}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-primary\">{this.state.lastResultCodeMsg}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t{this.printResults()}\n\t\t\t\t\t</div>\n\t\t\t\t</ServiceBlock>\n\n\t\t\t\t<div className=\"service-description\">\n\t\t\t\t\t{this.props.i18n.language.includes('ru') ? ruDesc() : enDesc()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withTranslation()(Whois);","import React from 'react';\n\nexport default function () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Заголовки ответа</h2>\n\n\t\t<p>Данный сервис позволяет просмотреть заголовки ответа сервера и узнать код состояния HTTP. Это информация,\n\t\t\tкоторую сервер отправляет в ответ на HTTP запрос.</p>\n\t\t<p>Заголовки (headers) содержат информацию о результате запроса браузера, о технологиях, используемых на\n\t\t\tсервере, размере контента, данные cookies. Также зачастую в заголовках ответа сервера передаются инструкции\n\t\t\tповедения для клиента (браузера).</p>\n\n\t\t<p>По заголовкам вполне можно увидеть, какой именно веб-сервер (Apache, nginx и др.) и операционная система\n\t\t\tприменяются на сервере. Также можно увидеть время, по которому живет сервер.</p>\n\t</div>;\n}","import React from 'react';\n\nexport default function () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Headers in the server response</h2>\n\n\t\t<p>This service allows you to view the server response headers and find the HTTP status code. This is the\n\t\t\tinformation that the server sends in response to an HTTP request.</p>\n\t\t<p>Headers contain information about the result of the browser request, the technologies used on the server, the\n\t\t\tsize of the content, these cookies. Also, the behavior of the client (browser) is often transmitted in the\n\t\t\tserver response headers.</p>\n\n\t\t<p>By the headers you can see exactly which web server (Apache, nginx, etc.) and the operating system are used\n\t\t\ton the server. You can also see the time by which the server lives.</p>\n\t</div>;\n}","import React, {Component} from 'react';\nimport {withTranslation} from 'react-i18next';\n\nimport ServiceBlock from '../ServiceBlock';\nimport classnames from 'classnames';\nimport checkValidDomain from 'is-valid-domain';\nimport apiRequest from '../../api/api-request';\n\nimport enDesc from './desc-en';\nimport ruDesc from './desc-ru';\n\nimport './Whois.css';\n\nconst API_METHOD = 'whois';\n\nclass Whois extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdomain: '',\n\t\t\tchecking: false,\n\t\t\tlastResult: '',\n\t\t\tisValidDomain: true,\n\t\t\terrMsg: ''\n\t\t};\n\t}\n\n\trunCheck() {\n\t\tlet {domain} = this.state;\n\n\t\tconst cleanDomain = domain.replace(/https?:\\/\\//, '');\n\t\tif (cleanDomain !== domain) {\n\t\t\tdomain = cleanDomain;\n\t\t\tthis.setState({\n\t\t\t\tdomain: cleanDomain\n\t\t\t});\n\t\t}\n\n\t\tif (!checkValidDomain(domain)) {\n\t\t\tthis.setState({\n\t\t\t\tisValidDomain: false,\n\t\t\t\terrMsg: this.props.t('p_whois_errInvalidDomain')\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisValidDomain: true,\n\t\t\t\terrMsg: '',\n\t\t\t\tchecking: true\n\t\t\t});\n\n\t\t\tapiRequest(API_METHOD, {domain})\n\t\t\t\t.then(json => this.processResult(json))\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdomain: '',\n\t\t\t\t\t\tchecking: false,\n\t\t\t\t\t\tisValidDomain: true,\n\t\t\t\t\t\terrMsg: this.props.t('common_serverErrorMsg')\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprocessResult(json) {\n\t\tthis.setState({\n\t\t\tchecking: false,\n\t\t\tlastResult: json.whois_response || '',\n\t\t\tresultShown: true,\n\t\t\tdomain: ''\n\t\t});\n\n\t\t// Set focus again\n\t\tif (this.domainInput) {\n\t\t\tthis.domainInput.focus();\n\t\t}\n\t}\n\n\thandleKeyPress(e) {\n\t\tif (e.key && e.key.toLowerCase() === 'enter') {\n\t\t\tthis.runCheck();\n\t\t}\n\t}\n\n\thandleChange(e) {\n\t\tconst val = e.target.value;\n\t\tthis.setState({\n\t\t\tisValidDomain: true,\n\t\t\terrMsg: '',\n\t\t\tdomain: val\n\t\t});\n\t}\n\n\n\trender() {\n\t\tconst {domain} = this.state;\n\t\tconst {t} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ServiceBlock pageTitle={t('p_whois_pageTitle')} errMsg={this.state.errMsg}>\n\t\t\t\t\t<div className=\"column is-two-thirds-widescreen is-11-touch action-block\">\n\t\t\t\t\t\t<div className=\"field has-addons is-center\">\n\t\t\t\t\t\t\t<p className=\"control is-hidden-touch\">\n\t\t\t\t\t\t\t\t<span className=\"button is-static is-medium\">\n\t\t\t\t\t\t\t\t\t{t('p_whois_domain')}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<div className=\"control is-expanded\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={classnames('input is-medium port-input has-text-centered', {\n\t\t\t\t\t\t\t\t\t\t'is-danger': !this.state.isValidDomain\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tref={(input) => {\n\t\t\t\t\t\t\t\t\t\tthis.domainInput = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={domain}\n\t\t\t\t\t\t\t\t\tplaceholder=\"example.com\"\n\t\t\t\t\t\t\t\t\tonKeyPress={e => this.handleKeyPress(e)}\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\t\tdisabled={this.state.checking}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<a className={classnames('button is-info is-medium', {'is-loading': this.state.checking})}\n\t\t\t\t\t\t\t\t   onClick={() => this.runCheck()}>\n\t\t\t\t\t\t\t\t\t{t('p_whois_actionBtnTitle')}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classnames('has-text-left result-text-block', {'is-hidden': !this.state.resultShown})}>\n\t\t\t\t\t\t<pre className=\"result-text\">{this.state.lastResult}</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</ServiceBlock>\n\n\t\t\t\t<div className=\"service-description\">\n\t\t\t\t\t{this.props.i18n.language.includes('ru') ? ruDesc() : enDesc()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withTranslation()(Whois);","import React from 'react';\n\nexport default function () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Информация о домене</h2>\n\t\t<p>WHOIS (англ. \"Who is?\" — \"Кто такой?\") — протокол, благодаря которому можно получить информацио о доменном\n\t\t\tимени или об IP-адресе.</p>\n\n\t\t<p>С помощью WHOIS можно узнать, занят ли домен, а также выяснить контактные данные владельца домена, дату\n\t\t\tсоздания, дату окончания регистрации и многое другое.</p>\n\n\t\t<p>Вся эта информация является публичной, однако некоторые регистраторы позволяют скрывать прямые контакты\n\t\t\tвладельца домена. В этом случае будут указаны контакты компании-регистратора.</p>\n\t</div>;\n}","import React from 'react';\n\nexport default function () {\n\treturn <div>\n\t\t<h2 className=\"is-size-4\">Domain and IP Information</h2>\n\t\t<p>WHOIS (\"Who is?\") Is a protocol through which you can get information\n\t\t\tabout a domain name or an IP address.</p>\n\n\t\t<p>With the help of WHOIS you can find out if the domain is busy, as well as find out contact\n\t\t\tdetails of the domain owner, creation date, expiration date of registration and much more.</p>\n\n\t\t<p>All this information is public, but some registrars allow you to hide direct contacts of the\n\t\t\tdomain owner. In this case, contacts of the registrar company will be indicated.</p>\n\t</div>;\n}","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport notFoundImg from './404.png';\n\nexport default function Page404 () {\n\tconst {t} = useTranslation();\n\n\treturn <div>\n\t\t<h1 className=\"is-size-4 heading title\">{t('p_404_pageTitle')}</h1>\n\n\t\t<img src={notFoundImg} alt=\"404\"/>\n\t</div>;\n}","import React from 'react';\nimport {Router, Route, Switch, NavLink} from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ReactGA from 'react-ga4';\nimport ym from 'react-yandex-metrika';\n\nimport {withTranslation} from 'react-i18next';\nimport './App.css';\nimport Header from './Header/Header';\nimport QuickInfo from './QuickInfo/QuickInfo';\n\nimport {\n\tCheck,\n\tScanner,\n\tResponse,\n\tProtocols,\n\tWhois,\n\tPage404\n} from './routes';\n\nconst history = createBrowserHistory();\n\nif (process.env.NODE_ENV === 'production') {\n\n\t// Google Analytics + Yandex.Metrika\n\t// see init code for YMetrika in ./index.jsx\n\tReactGA.initialize('G-M7PR6RRB25');\n\thistory.listen((location) => {\n\t\tReactGA.send({ hitType: 'pageview', page: location.pathname + location.search });\n\t\tym('hit', location.pathname + location.search);\n\t});\n}\n\nfunction AppRouter({t}) {\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<div>\n\t\t\t\t<div className=\"body-container\">\n\t\t\t\t\t<Header/>\n\n\t\t\t\t\t<div className=\"container main-content\">\n\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t<div className=\"column is-2\">\n\t\t\t\t\t\t\t\t<aside className=\"menu\">\n\t\t\t\t\t\t\t\t\t<p className=\"menu-label\">\n\t\t\t\t\t\t\t\t\t\t{t('menu_header_services')}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<ul className=\"menu-list\">\n\t\t\t\t\t\t\t\t\t\t<li><NavLink exact to=\"/\">{t('menu_checkPort')}</NavLink></li>\n\t\t\t\t\t\t\t\t\t\t<li><NavLink to=\"/scanner\">{t('menu_scanner')}</NavLink></li>\n\t\t\t\t\t\t\t\t\t\t<li><NavLink to=\"/whois\">{t('menu_whois')}</NavLink></li>\n\t\t\t\t\t\t\t\t\t\t<li><NavLink to=\"/response\">{t('menu_response')}</NavLink></li>\n\t\t\t\t\t\t\t\t\t\t<li><NavLink to=\"/protocols\">{t('menu_protocols')}</NavLink></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={Check}/>\n\t\t\t\t\t\t\t\t\t<Route path=\"/scanner\" component={Scanner}/>\n\t\t\t\t\t\t\t\t\t<Route path=\"/whois\" component={Whois}/>\n\t\t\t\t\t\t\t\t\t<Route path=\"/response\" component={Response}/>\n\t\t\t\t\t\t\t\t\t<Route path=\"/protocols\" component={Protocols}/>\n\t\t\t\t\t\t\t\t\t<Route component={Page404}/>\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"column is-one-fifth\">\n\t\t\t\t\t\t\t\t<p className=\"menu-label\">\n\t\t\t\t\t\t\t\t\t{t('sidebar_header_browserInfo')}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<QuickInfo/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t\t\t{t('footer_text')}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\tinfo@myopenports.com\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</Router>\n\n\n\t);\n}\n\nexport default withTranslation()(AppRouter);","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en from './translations/en';\nimport ru from './translations/ru';\n\ni18n\n\t.use(LanguageDetector)\n\t.use(initReactI18next)\n\t.init({\n\t\t// we init with resources\n\t\tresources: {\n\t\t\ten: en,\n\t\t\tru: ru\n\t\t},\n\t\tfallbackLng: 'en',\n\t\tdebug: process.env.NODE_ENV === 'development' || false,\n\n\t\t// have a common namespace used around the full app\n\t\tns: ['translations'],\n\t\tdefaultNS: 'translations',\n\n\t\tkeySeparator: false, // we use content as keys\n\n\t\tinterpolation: {\n\t\t\tescapeValue: false,\n\t\t\tformatSeparator: ','\n\t\t},\n\n\t\treact: {\n\t\t\twait: true\n\t\t}\n\t});\n\nexport default i18n;","export default {\n\ttranslations: {\n\n\t\t// Menu on the left side\n\t\tmenu_header_services: 'Services',\n\t\tmenu_checkPort: 'Check port',\n\t\tmenu_scanner: 'Port scanner',\n\t\tmenu_whois: 'WHOIS',\n\t\tmenu_ping: 'Ping',\n\t\tmenu_response: 'Site response',\n\t\tmenu_browserInfo: 'Browser Info',\n\t\tmenu_protocols: 'Protocols',\n\n\t\t// Right sidebar\n\t\tsidebar_header_browserInfo: 'Browser info',\n\t\tsidebar_quickInfoYourIp: 'Your IP',\n\t\tsidebar_quickInfoLocalIp: 'Local IP',\n\t\tsidebar_quickInfoBrowser: 'Browser',\n\t\tsidebar_quickInfoOS: 'Operating System',\n\t\tsidebar_quickInfoLocations: 'Location',\n\t\tsidebar_quickInfoUA: 'User-Agent',\n\n\t\t// Common\n\t\tcommon_serverErrorMsg: 'Server error. Please try again later.',\n\n\t\t// \"p_\" means Page\n\n\t\t// 404 page\n\t\tp_404_pageTitle: 'Page not found',\n\n\t\t// Whois page\n\t\tp_whois_pageTitle: 'WHOIS for Domain',\n\t\tp_whois_actionBtnTitle: 'Get info',\n\t\tp_whois_domain: 'Domain',\n\t\tp_whois_errInvalidDomain: 'Doesn\\'t seems to be a valid domain',\n\n\t\t// Port check page\n\t\tp_check_pageTitle: 'Check port status',\n\t\tp_check_port: 'Port',\n\t\tp_check_check: 'Check',\n\t\tp_check_open: 'open',\n\t\tp_check_closed: 'closed',\n\t\tp_check_is: 'is', // \"is open\" or \"is close\"\n\t\tp_check_errBadPort: 'Port number should be in range from 1 to 65535',\n\n\t\t// Scanner page\n\t\tp_scanner_pageTitle: 'Port Scanner',\n\t\tp_scanner_open: 'open',\n\t\tp_scanner_closed: ' closed',\n\t\tp_scanner_runScanner: 'Run scanner',\n\n\t\t// Protocols page\n\t\tp_protocols_pageTitle: 'Network Port information',\n\t\tp_protocols_errBadPort: 'Port number should be in range from 1 to 65535',\n\t\tp_protocols_port: 'Port',\n\t\tp_protocols_name: 'Name',\n\t\tp_protocols_description: 'Description',\n\t\tp_protocols_notAssigned: 'is not assigned to any protocol',\n\t\tp_protocols_getInfo: 'Get info',\n\n\n\t\t// Response page\n\t\tp_response_pageTitle: 'Response headers',\n\t\tp_response_url: 'URL',\n\t\tp_response_actionBtnTitle: 'Get response',\n\t\tp_response_errInvalidUri: 'Invalid URL',\n\t\tp_response_errUriNotFound: 'Unable to establish connection.',\n\n\t\t// Footer\n\t\tfooter_text: 'MyOpenPorts.com is a former website PortScan.ru. Checking ports since 2010.'\n\t}\n};","export default {\n\ttranslations: {\n\n\t\t// Menu on the left side\n\t\t// Menu on the left side\n\t\tmenu_header_services: 'Сервисы',\n\t\tmenu_checkPort: 'Проверка порта',\n\t\tmenu_scanner: 'Сканер портов',\n\t\tmenu_whois: 'WHOIS',\n\t\tmenu_ping: 'Пинг',\n\t\tmenu_response: 'Ответ сервера',\n\t\tmenu_browserInfo: 'Информация о браузере',\n\t\tmenu_protocols: 'Протоколы',\n\n\t\t// Right sidebar\n\t\tsidebar_header_browserInfo: 'Ваша информация',\n\t\tsidebar_quickInfoYourIp: 'Внешний IP',\n\t\tsidebar_quickInfoLocalIp: 'Локальный IP',\n\t\tsidebar_quickInfoBrowser: 'Браузер',\n\t\tsidebar_quickInfoOS: 'Операционная система',\n\t\tsidebar_quickInfoLocations: 'Локация',\n\t\tsidebar_quickInfoUA: 'User-Agent',\n\n\t\t// Common\n\t\tcommon_serverErrorMsg: 'Ошибка на сервере. Пожалуйста повторите позднее.',\n\n\t\t// \"p_\" means Page\n\n\t\t// 404 page\n\t\tp_404_pageTitle: 'Страница не найдена',\n\n\t\t// Whois page\n\t\tp_whois_pageTitle: 'WHOIS домена',\n\t\tp_whois_actionBtnTitle: 'Получить',\n\t\tp_whois_domain: 'Домен',\n\t\tp_whois_errInvalidDomain: 'Неверный домен',\n\n\t\t// Port check page\n\t\tp_check_pageTitle: 'Проверка открытого порта',\n\t\tp_check_port: 'Порт',\n\t\tp_check_check: 'Проверить',\n\t\tp_check_open: 'открыт',\n\t\tp_check_closed: 'закрыт',\n\t\tp_check_is: '', // \"is open\" or \"is close\"\n\t\tp_check_errBadPort: 'Номер порта должен быть в диапазоне от 1 до 65535',\n\n\t\t// Scanner page\n\t\tp_scanner_pageTitle: 'Сканер портов',\n\t\tp_scanner_open: 'открыт',\n\t\tp_scanner_closed: ' закрыт',\n\t\tp_scanner_runScanner: 'Запустить сканнер',\n\n\t\t// Protocols page\n\t\tp_protocols_pageTitle: 'Информация о сетевом порте',\n\t\tp_protocols_errBadPort: 'Номер порта должен быть в диапазоне от 1 до 65535',\n\t\tp_protocols_port: 'Порт',\n\t\tp_protocols_name: 'Название',\n\t\tp_protocols_description: 'Описание',\n\t\tp_protocols_notAssigned: 'не назначен протоколу',\n\t\tp_protocols_getInfo: 'Получить',\n\n\n\t\t// Response page\n\t\tp_response_pageTitle: 'Проверка ответа сервера',\n\t\tp_response_url: 'URL',\n\t\tp_response_actionBtnTitle: 'Получить',\n\t\tp_response_errInvalidUri: 'Неверный URL',\n\t\tp_response_errUriNotFound: 'Невозможно установить соединение.',\n\n\t\tfooter_text: 'MyOpenPorts.com это бывший сайт PortScan.ru. Проверяем порты с 2010.'\n\t}\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport './index.css';\nimport App from './App';\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './i18n';\nimport { YMInitializer } from 'react-yandex-metrika';\nimport * as Sentry from '@sentry/browser';\n\nif (process.env.NODE_ENV === 'production') {\n\t// Init Sentry integration\n\tSentry.init({dsn: 'https://e3e1cef0a9db45a88c11c3cfb53ce7bf@sentry.io/1423042'});\n}\n\nReactDOM.render(\n\t<I18nextProvider i18n={i18n}>\n\t\t<YMInitializer accounts={[52922749]} />\n\t\t<App/>\n\t</I18nextProvider>,\n\tdocument.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/myopenports.48e44afa.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-copy.ae5d1f8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.1606a6e0.png\";"],"sourceRoot":""}